/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import AccesoDatos.CiudadData;
import AccesoDatos.PaqueteData;
import Entidades.Alojamiento;
import Entidades.Ciudad;
import Entidades.Paquete;
import Entidades.Pasaje;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import static java.time.temporal.ChronoUnit.DAYS;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alumno
 */
public class Usuario extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo = new DefaultTableModel();
    private DefaultTableModel modelo2 = new DefaultTableModel();
    /**
     * Creates new form Usuario
     */
    public Usuario() {
        initComponents();
        cargarCombo();
        Date fActual = new Date();
        jdFechaIngreso.setMinSelectableDate(fActual);
        jdFechaSalida.setMinSelectableDate(fActual);
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cbCiudadOrigen = new javax.swing.JComboBox<>();
        cbCiudadDestino = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jlImporte = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jdFechaIngreso = new com.toedter.calendar.JDateChooser();
        jdFechaSalida = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtPaquetesDisponibles = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtPaquetesSeleccionados = new javax.swing.JTable();
        bBuscar = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        bAgregar = new javax.swing.JButton();
        bLimpiar = new javax.swing.JButton();
        bPresupuesto = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        setTitle("Generar Presupuesto");
        setMaximumSize(new java.awt.Dimension(853, 644));
        setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(853, 644));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Seleccione ciudad origen:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Seleccione ciudad destino:");

        cbCiudadOrigen.setMaximumSize(new java.awt.Dimension(180, 32767));
        cbCiudadOrigen.setPreferredSize(new java.awt.Dimension(180, 20));

        cbCiudadDestino.setMaximumSize(new java.awt.Dimension(180, 32767));
        cbCiudadDestino.setPreferredSize(new java.awt.Dimension(180, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Importe total: $");

        jlImporte.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlImporte.setText("0");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Lista total:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Fecha ida:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Fecha vuelta:");

        jdFechaIngreso.setMaximumSize(new java.awt.Dimension(180, 2147483647));
        jdFechaIngreso.setMinimumSize(new java.awt.Dimension(180, 20));
        jdFechaIngreso.setPreferredSize(new java.awt.Dimension(180, 30));

        jdFechaSalida.setMaximumSize(new java.awt.Dimension(180, 2147483647));
        jdFechaSalida.setMinimumSize(new java.awt.Dimension(180, 20));
        jdFechaSalida.setPreferredSize(new java.awt.Dimension(180, 30));

        jtPaquetesDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtPaquetesDisponibles);

        jtPaquetesSeleccionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtPaquetesSeleccionados.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane3.setViewportView(jtPaquetesSeleccionados);

        bBuscar.setText("Buscar");
        bBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bBuscarMouseClicked(evt);
            }
        });

        bEliminar.setText("Eliminar");
        bEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bEliminarMouseClicked(evt);
            }
        });

        bAgregar.setText("Agregar");
        bAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bAgregarMouseClicked(evt);
            }
        });

        bLimpiar.setText("Limpiar");
        bLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bLimpiarMouseClicked(evt);
            }
        });

        bPresupuesto.setText("Generar Presupuesto");
        bPresupuesto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bPresupuestoMouseClicked(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jdFechaIngreso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbCiudadOrigen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jdFechaSalida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbCiudadDestino, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(1, 1, 1)))
                        .addGap(32, 32, 32))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jlImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(262, 262, 262)
                .addComponent(jbSalir)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(374, 374, 374)
                .addComponent(bAgregar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addComponent(bBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bPresupuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bEliminar)
                                .addGap(18, 18, 18)
                                .addComponent(bLimpiar)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCiudadOrigen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCiudadDestino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdFechaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bBuscar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bAgregar)
                .addGap(5, 5, 5)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bEliminar)
                    .addComponent(bLimpiar))
                .addGap(18, 18, 18)
                .addComponent(bPresupuesto)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalir)
                    .addComponent(jlImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bPresupuestoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bPresupuestoMouseClicked
        // TODO add your handling code here:
        if(jdFechaIngreso.getDate() != null && jdFechaSalida.getDate() != null){
            LocalDate fechaI = jdFechaIngreso.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalDate fechaS = jdFechaSalida.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy");
            int mesI = fechaI.getMonth().getValue();
            int mesS = fechaS.getMonth().getValue();
            long dias = DAYS.between(fechaI, fechaS);
            double diasD = (double)dias;
            diasD = diasD + 1;
            double suma = 0;
            double total = 0;
            for (int i = 0; i < jtPaquetesSeleccionados.getRowCount(); i++) {
                Pasaje pasaje = (Pasaje)jtPaquetesSeleccionados.getValueAt(i, 3);
                Alojamiento alojamiento = (Alojamiento)jtPaquetesSeleccionados.getValueAt(i, 2);
                double precioP = pasaje.getImporte();
                double precioA = alojamiento.getImporteDiario();
                suma = (precioA * diasD) + precioP;
                total = total + suma;
            }
            if ((mesI >= 11 || mesI <= 3) || (mesS >= 11 || mesS <= 3) ){
                total = total + (total * 0.30);
                jlImporte.setText(total + "");
            }else if ((mesI >= 4 && mesI <= 7) || (mesS >= 4 && mesS <= 7)) {
                total = total + (total * 0.15);
                jlImporte.setText(total + "");
            } else {
                jlImporte.setText(total + "");
            }
            
        } else {
            JOptionPane.showMessageDialog(this, "Selecione las fechas.");
        }
        
    }//GEN-LAST:event_bPresupuestoMouseClicked

    private void bLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bLimpiarMouseClicked
        // TODO add your handling code here:
        if (jtPaquetesSeleccionados.getRowCount() > 0) {
            while (jtPaquetesSeleccionados.getRowCount() > 0) {
                modelo2.removeRow(0);
            }
        } else {
            JOptionPane.showMessageDialog(this, "La tabla no contiene filas a borrar.");
        }

    }//GEN-LAST:event_bLimpiarMouseClicked

    private void bAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bAgregarMouseClicked
        // TODO add your handling code here:
        if (jtPaquetesDisponibles.getSelectedRowCount() > 0) {
            int i = jtPaquetesDisponibles.getSelectedRow();
            Object[] fila = new Object[jtPaquetesDisponibles.getColumnCount()];
            for (int j = 0; j < fila.length; j++) {
                fila[j] = jtPaquetesDisponibles.getValueAt(i, j);
            }
            modelo2.addRow(fila);
        }
    }//GEN-LAST:event_bAgregarMouseClicked

    private void bEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bEliminarMouseClicked
        // TODO add your handling code here:
        if (jtPaquetesSeleccionados.getRowCount() > 0 && jtPaquetesSeleccionados.getSelectedRow() != -1) {
            modelo2.removeRow(jtPaquetesSeleccionados.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione fila a borrar.");
        }
    }//GEN-LAST:event_bEliminarMouseClicked

    private void bBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bBuscarMouseClicked
        // TODO add your handling code here:
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        Ciudad cOrigen = (Ciudad)cbCiudadOrigen.getSelectedItem();
        Ciudad cDestino = (Ciudad) cbCiudadDestino.getSelectedItem();
        PaqueteData pd = new PaqueteData();
        List<Paquete> paquetes = pd.listarPaquetes();
        for (Paquete paquete : paquetes) {
            if (paquete.getOrigen().getIdCiudad() == cOrigen.getIdCiudad() && paquete.getDestino().getIdCiudad() == cDestino.getIdCiudad()) {
                modelo.addRow(new Object[] {paquete.getOrigen(), paquete.getDestino(), paquete.getAlojamiento(), paquete.getPasaje()});
            }
        }
    }//GEN-LAST:event_bBuscarMouseClicked

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        Usuario.this.setVisible(false);
    }//GEN-LAST:event_jbSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAgregar;
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bLimpiar;
    private javax.swing.JButton bPresupuesto;
    private javax.swing.JComboBox<Ciudad> cbCiudadDestino;
    private javax.swing.JComboBox<Ciudad> cbCiudadOrigen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbSalir;
    private com.toedter.calendar.JDateChooser jdFechaIngreso;
    private com.toedter.calendar.JDateChooser jdFechaSalida;
    private javax.swing.JLabel jlImporte;
    private javax.swing.JTable jtPaquetesDisponibles;
    private javax.swing.JTable jtPaquetesSeleccionados;
    // End of variables declaration//GEN-END:variables
    
    private void cargarCombo() {
        CiudadData cd = new CiudadData();
        List<Ciudad> ciudades = cd.listarCiudades();
        for (Ciudad ciudad : ciudades) {
            cbCiudadOrigen.addItem(ciudad);
            cbCiudadDestino.addItem(ciudad);
        }
    }
    
    private void armarCabecera() {
        modelo.addColumn("Ciudad Origen");
        modelo.addColumn("Ciudad Destino");
        modelo.addColumn("Alojamiento");
        modelo.addColumn("Pasaje");
        modelo2.addColumn("Ciudad Origen");
        modelo2.addColumn("Ciudad Destino");
        modelo2.addColumn("Alojamiento");
        modelo2.addColumn("Pasaje");
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        while (modelo2.getRowCount() > 0) {
            modelo2.removeRow(0);
        }
        jtPaquetesDisponibles.setModel(modelo);
        jtPaquetesSeleccionados.setModel(modelo2);
    } 
}
